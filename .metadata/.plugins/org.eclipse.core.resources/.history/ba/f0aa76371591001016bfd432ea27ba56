package EasyProblems;

public class SuperPrime {
	static void solution(int n) {
		boolean[] initArr = new boolean[n + 1];
		for (int i = 0; i <= n; i++) {
			initArr[i] = true;
		}
		initArr[0] = initArr[1] = false;

		for (int p = 2; p * p <= n; p++) {
			if (initArr[p]) {
				for (int i = p * p; i <= n; i += p) {
					initArr[i] = false;
				}
			}
		}

		int count = 0;
		for (int i = 0; i <= n; i++) {
			if (initArr[i])
				count++;
		}
		int[] res = new int[count];
		int index = 0;
		for (int p = 2; p <= n; p++) {
			if (initArr[p])
				res[index++] = p;
		}

		for (int i = 0; i < count; i++) {
			System.out.print(res[i] + " ");
			if (res[i] - 2 == i) {
				System.out.print(res[i] + " ");
			}
		}
	}

	public static void main(String[] args) {
		solution(7);
	}
}
