package EasyProblems;

public class NextPermutation {
	static int[] solution(int[] arr) {
		int n = arr.length;

		// tim vi tri pivot ma be nhat
		int pivot = -1;
		for (int i = n - 2; i >= 0; i--) {
			if (arr[i] < arr[i + 1]) {
				pivot = i;
				break;
			}
		}

		// Tim vi tri ben phai nhat lon hon arr[pivot]
		for (int i = n - 1; i > pivot; i--) {
			if (arr[i] > arr[pivot]) {
				swap(arr, i, pivot); // doi cho cho nhau
				break;
			}
		}

		reverse(arr, pivot + 1, n - 1); // Sap xep lai cac phan tu sau pivote;

	}

	private static void reverse(int[] arr, int start, int end) {
		while (start < end) {
			swap(arr, start++, end--);
		}
	}

	private static void swap(int[] arr, int i, int j) {
		int temp = arr[i];
		arr[i] = arr[j];
		arr[j] = temp;
	}

	public static void main(String[] args) {
		int[] arr = { 2, 4, 1, 7, 5, 0 };
		solution(arr);

		for (int i = 0; i < arr.length; i++)
			System.out.print(arr[i] + " ");
	}
}
