package EasyProblems;

public class SieveEratosthenes {

	static int[] solution(int n) {
		// Khoi tao
		boolean[] prime = new boolean[n + 1];
		for (int i = 0; i <= n; i++) {
			prime[i] = true;
		}
		prime[0] = prime[1] = false;

		for (int p = 2; p * p <= n; p++) {
			if (prime[p]) {
				for (int i = p * p; i <= n; i += p) {
					prime[i] = false;
				}
			}
		}

		int count = 0;
		for (int p = 2; p <= n; p++) {
			if (prime[p])
				count++;
		}

		// Store primes in an array
		int[] res = new int[count];
		int index = 0;
		for (int p = 2; p <= n; p++) {
			if (prime[p])
				res[index++] = p;
		}

		return res;

	}

	public static void main(String[] args) {
		int n = 35;
		int[] res = solution(n);
		for (int ele : res) {
			System.out.print(ele + " ");
		}
	}
}
